[{"D:\\reacthookspratice\\my-app\\src\\App.js":"1","D:\\reacthookspratice\\my-app\\src\\index.js":"2","D:\\reacthookspratice\\my-app\\src\\reportWebVitals.js":"3"},{"size":553,"mtime":1609856339060,"results":"4","hashOfConfig":"5"},{"size":1754,"mtime":1610290946868,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1609773026717,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qf9ipd",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\reacthookspratice\\my-app\\src\\App.js",[],"D:\\reacthookspratice\\my-app\\src\\index.js",["15","16"],"import React, { memo, useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nlet lastDependences\r\n\r\nfunction useEffect1(fn, dependences) {\r\n  if (lastDependences) {\r\n    const isChange = !lastDependences.every((item, index) => {\r\n      return item === dependences[index]\r\n    })\r\n\r\n    if (isChange) {\r\n      setTimeout(fn, 0)\r\n      lastDependences = dependences\r\n    }\r\n\r\n  } else {\r\n    lastDependences = dependences\r\n    setTimeout(fn, 0)\r\n  }\r\n}\r\n\r\nlet lastLayoutEffectDependences\r\nfunction useELayoutEffect1(fn, dependences) {\r\n\r\n  if (lastLayoutEffectDependences) {\r\n    const isChange = !lastLayoutEffectDependences.every((item, index) => {\r\n      return item === dependences[index]\r\n    })\r\n\r\n    if (isChange) {\r\n      queueMicrotask(fn)\r\n      lastLayoutEffectDependences = dependences\r\n    }\r\n\r\n  } else {\r\n    queueMicrotask(fn)\r\n    lastLayoutEffectDependences = dependences\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n\r\n  const [num, setNum] = useState(0)\r\n\r\n  useELayoutEffect1(() => {\r\n    console.log('微任务之后渲染执行之前', num)\r\n  }, [num])\r\n\r\n  useEffect1(() => {\r\n    console.log('num的执行', num)\r\n  }, [num])\r\n\r\n  return (\r\n    <div>\r\n      <p>{num}</p>\r\n      <button onClick={() => {\r\n        const i = num + 1\r\n        setNum(i)\r\n      }}>num:{num}</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction render() {\r\n  ReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n  );\r\n}\r\n\r\nrender()\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","D:\\reacthookspratice\\my-app\\src\\reportWebVitals.js",[],{"ruleId":"17","severity":1,"message":"18","line":1,"column":17,"nodeType":"19","messageId":"20","endLine":1,"endColumn":21},{"ruleId":"17","severity":1,"message":"21","line":1,"column":23,"nodeType":"19","messageId":"20","endLine":1,"endColumn":32},"no-unused-vars","'memo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used."]